library("UsingR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
head(precip)
head(sort(precip, decreasing = TRUE))
current_time <- now()
require(lubridate)
library(UsingR)
require(lubridate)
install.packages("lubridate")
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
current_time <-now()
current_time
?lubridate
month(current_time, label = TRUE)
?ymd
x <- babies$dwt
x
length(x)
x[x==999] <- NA
range(x, na.rm = TRUE)
age <- kid.weights$age
age
ht <- kid.weights$height
ht[age>=48 & age<=60]
ht
gas <- c(65311 65624 659!8 66219 66499 66821 67145 67447)
gas <- c(65311 65624 65908 66219 66499 66821 67145 67447)
gas <- c(65311, 65624, 65908, 66219, 66499, 66821, 67145, 67447)
diff(gas)
mean(gas)
mean (diff(gas))
x <- c(2,5,4,10,8)
x_square = x*x
x_square
?gsub
first_and_last <- function(name) { name <- gsub(" ", "", name) letters <- strsplit(name, split = "")[[1]] c(first = min(letters), last = max(letters)) }
first_and_last("New York")
first_and_last <- function(name) { name <- gsub(" ", "", name) letters <- strsplit(name, split = "")[[1]] c(first = min(letters), last = max(letters)) }
first_and_last <- function(name) {
name <- gsub(" ", "", name)
letters <- strsplit(name, split = "")[[1]]
c(first = min(letters), last = max(letters))
}
first_and_last("New York")
help(gsub)
gsub(" ","", "New York")
a <- gsub(" ","", "New York")
letters <- strsplit(a, split = "")[[1]]
letters
?cat
cat("The average temperature is", mean(x), "\n")
cat("The average temperature is", mean(c(10,5,20,1)), "\n")
?vapply
?vapply(list, function, FUN.VALUE = type, ...)
rep(seq(8, 2, by = -2), times = 2))
rep(seq(8, 2, by = -2), times = 2)
?strptime
install.packages(c("nycflights13", "gapminder", "Lahman"))
install.packages(c("backports", "BH", "class", "codetools", "htmlTable", "pillar", "rlang", "tibble"))
install.packages("rmarkdown")
install.packages("tinytex")
unlink('Desktop/rmarkdown-book/03-documents_cache', recursive = TRUE)
setwd("~/Desktop/DataCamp Courses/DataCampCourses/R/Introduction to dplyr")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("hflights", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(dplyr), library(hflights) # loading necessary packages
library(dplyr) ; library(hflights) # loading necessary packages
?select
example("select")
library(dplyr) ; library(hflights) # loading necessary packages
# View examples of select() that accompanied the packages
example("select")
library(dplyr) ; library(hflights) # loading necessary packages
# View examples of select() that accompanied the packages
example("select")
# Convert hflights into a tibble
hflights <- as_tibble(hflights)
# As usual, hflights is pre-loaded as a tbl, together with the necessary libraries.
# Print out a tbl containing just ArrDelay and DepDelay
select (hflights, "ArrDelay": "DepDelay")
# Print out a tbl as described in the second instruction, using both helper functions and variable names
select (hflights, "UniqueCarrier": "TailNum", starts_with("Cancell"))
# Print out a tbl as described in the third instruction, using only helper functions.
select (hflights, ends_with("Time"), contains ("Delay"))
?mutate
library(dplyr)  #loading necessary package
library(hflights)
head (hflights)
#Convert the hflights into a tibble
hflights_tibble <- as_tibble(hflights)
head (hflights_tibble)
carriers <-  hflights_tibble$UniqueCarrier
head (carriers)
lut <- c("AA" = "American", "AS" = "Alaska", "B6" = "JetBlue", "CO" = "Continental", "DL" = "Delta", "OO" = "SkyWest", "UA" = "United", "US" = "US_Airways", "WN" = "Southwest", "EV" = "Atlantic_Southeast", "F9" = "Frontier",
"FL" = "AirTran", "MQ" = "American_Eagle", "XE" = "ExpressJet", "YV" = "Mesa")
carriers <- lut[carriers]
hflights$Carrier <- carriers
glimpse(hflights)
hflights$CancellationCode[hflights$CancellationCode ==""] <- "E" # Need to convert "" to "E"
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA", "D" = "security", "E" = "not cancelled")
hflights$Code <- lut[hflights$CancellationCode]
glimpse(hflights)
setwd("~/Desktop/DataCamp Courses/DataCampCourses/R/Introduction to dplyr")
knitr::opts_chunk$set(echo = TRUE)
gapminder %>% arrange(lifeExp)  #Arrange by life expectancy ascending order
knitr::opts_chunk$set(echo = TRUE)
library (gapminder)
library (dplyr)
gapminder %>% filter (country == "United States")
gapminder %>% arrange(lifeExp)  #Arrange by life expectancy ascending order
gapminder %>% arrange(desc(lifeExp))
# Filter for the year 1957, then arrange in descending order of population
gapminder %>% filter(year == 1957) %>% arrange(desc(pop))
library(ggplot2)  # Need to load the library first.
ggplot(gapminder %>%filter(year==1952), aes(x=pop, y= gdpPercap)) + geom_point()
gapminder_2002 <- gapminder %>% filter(year == 2002)
ggplot(gapminder_2002, aes (x= pop, y= lifeExp, color = continent, size = gdpPercap)) + geom_point()+ scale_x_log10()
ggplot(gapminder, aes(x= gdpPercap, y= lifeExp, color = continent, size=pop)) + geom_point() + scale_x_log10() + facet_wrap(~year)
# Example:
# Code below will display summarize of median life expectancy and max gdpPerCapital for each year.
gapminder %>% group_by(year) %>%summarize(medianLifeExp = median(lifeExp), maxGdpPercap = max(gdpPercap))
gapminder %>% filter(year==1957) %>% group_by(continent) %>% summarize(medianLifeExp = median(lifeExp), maxGdpPercap = max(gdpPercap))
# Display bar graph of median GDP per cap for year 1952 per continent
by_continent <- gapminder%>%filter(year==1952) %>%group_by(continent) %>%summarize(medianGdpPercap = median (gdpPercap))
ggplot(by_continent, aes(x= continent, y= medianGdpPercap)) + geom_col()
# Another example:
oceania_1952 <- gapminder %>% filter(year == 1952, continent == "Oceania") # filter by year and Oceania
ggplot(oceania_1952, aes(x = country, y= gdpPercap)) + geom_col()
